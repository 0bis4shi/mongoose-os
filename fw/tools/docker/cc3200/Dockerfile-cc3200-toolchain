FROM ubuntu:xenial

RUN DEBIAN_FRONTEND=noninteractive apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y -q \
      apt-utils autoconf bison build-essential flex gawk git gperf help2man \
      libexpat-dev libncurses5-dev libtool-bin \
      python python-dev python-git python-pyelftools python-serial python-six python-yaml \
      software-properties-common texinfo unzip vim-nox wget zile zip && \
    apt-get clean

RUN cd /tmp && \
    git clone https://github.com/rojer/fsync-stub && \
    cd /tmp/fsync-stub && ./install.sh && \
    rm -rf /tmp/fsync-stub

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y -q \
      gcc-arm-none-eabi gdb-arm-none-eabi libnewlib-arm-none-eabi libnewlib-dev && \
    apt-get clean

RUN cd /tmp && \
    git clone https://github.com/rojer/fsync-stub && \
    cd /tmp/fsync-stub && ./install.sh && \
    rm -rf /tmp/fsync-stub

ARG TI_COMPILER_DIR
ADD $TI_COMPILER_DIR /opt/$TI_COMPILER_DIR

# Create our own version of libc - with no HOSTIO and malloc functions.
ADD ti_libc.patch /opt/$TI_COMPILER_DIR/lib
RUN cd /opt/$TI_COMPILER_DIR/lib && rm *.lib && \
    patch -p 0 < ti_libc.patch && \
    ./mklib --index=libc.a --pattern=rtsv7M4_T_le_eabi.lib \
            --extra_options='-O4 --opt_for_speed=0' \
            --compiler_bin_dir=../bin \
            --name=rtsv7M4_T_le_eabi_cesanta.lib --install_to=. \
            --parallel=4

ARG SDK_DIR
ADD $SDK_DIR /opt/$SDK_DIR
ADD user.h /opt/$SDK_DIR/cc3200-sdk/simplelink/user.h

ARG NWP_SP_FILE
ADD $NWP_SP_FILE $NWP_SP_FILE.sign /opt/

ADD fw_meta.py serve_core.py mklfs mkspiffs mkspiffs8 /usr/local/bin/

ENV SDK_PATH=/opt/$SDK_DIR/cc3200-sdk
ENV TI_COMPILER_PATH=/opt/$TI_COMPILER_DIR
ENV CC3200_SP_FILE=/opt/$NWP_SP_FILE
ENV MGOS_TARGET_GDB=/usr/bin/arm-none-eabi-gdb
